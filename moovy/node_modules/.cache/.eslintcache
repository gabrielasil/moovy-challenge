[{"/home/gabriela/Documentos/moovy-challenge/moovy/src/index.js":"1","/home/gabriela/Documentos/moovy-challenge/moovy/src/App.js":"2","/home/gabriela/Documentos/moovy-challenge/moovy/src/components/MovieList.js":"3","/home/gabriela/Documentos/moovy-challenge/moovy/src/components/Toastr.js":"4","/home/gabriela/Documentos/moovy-challenge/moovy/src/components/MovieListHeading.js":"5","/home/gabriela/Documentos/moovy-challenge/moovy/src/components/SearchBox.js":"6","/home/gabriela/Documentos/moovy-challenge/moovy/src/components/AddReview.js":"7","/home/gabriela/Documentos/moovy-challenge/moovy/src/components/AddFavorites.js":"8","/home/gabriela/Documentos/moovy-challenge/moovy/src/components/RemoveFavorites.js":"9","/home/gabriela/Documentos/moovy-challenge/moovy/src/components/FavoritesMovieList.js":"10"},{"size":198,"mtime":1640341034881,"results":"11","hashOfConfig":"12"},{"size":3341,"mtime":1641228070803,"results":"13","hashOfConfig":"12"},{"size":1746,"mtime":1641392005326,"results":"14","hashOfConfig":"12"},{"size":335,"mtime":1640341034881,"results":"15","hashOfConfig":"12"},{"size":202,"mtime":1640341034881,"results":"16","hashOfConfig":"12"},{"size":401,"mtime":1640341034881,"results":"17","hashOfConfig":"12"},{"size":1057,"mtime":1641228041189,"results":"18","hashOfConfig":"12"},{"size":573,"mtime":1640341034881,"results":"19","hashOfConfig":"12"},{"size":227,"mtime":1640341034881,"results":"20","hashOfConfig":"12"},{"size":2048,"mtime":1641392005326,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9bmzfs",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gabriela/Documentos/moovy-challenge/moovy/src/index.js",[],"/home/gabriela/Documentos/moovy-challenge/moovy/src/App.js",["43"],"import React, { useEffect, useState, Component } from \"react\";\nimport Toastr from \"./components/Toastr\";\n\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"./components/MovieList\";\nimport MovieListHeading from \"./components/MovieListHeading\";\nimport SearchBox from \"./components/SearchBox\";\nimport AddFavorites from \"./components/AddFavorites\";\nimport RemoveFavorites from \"./components/RemoveFavorites\";\nimport AddReview from \"./components/AddReview\";\nimport FavoritesMovieList from \"./components/FavoritesMovieList\";\nimport { toast } from \"react-toastify\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const getMovieRequest = async (searchValue) => {\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda` //template string\n    \n    const response = await fetch(url);\n    const responseJson = await response.json(); //converts http response into json\n\n    if(responseJson.Search){ //search only if its a value\n      setMovies(responseJson.Search);\n    }\n    \n  };\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n\n  useEffect(()=> {\n    const url = `http://localhost:3000/api/moovy` //template string\n    \n    fetch(url).then(async (response) => {\n      setFavorites(await response.json());\n    }).catch(console.log)\n\n  }, [favorites]); //just on page load\n\n  const addFavoriteMovie = (movie) => {\n    fetch(\"http://localhost:3000/api/moovy\", {\n      // Adding method type\n      method: \"POST\",\n      \n      // Adding body or contents to send\n      body: JSON.stringify({\n          movieID: movie.imdbID\n      }),\n\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n\n  // Displaying popups according to the response status\n    .then(json => {\n      if(json.status === 201){\n        toast.success('Added to your Library');\n      }else{\n        toast.error('The movie is already on your Library');\n      }\n    });\n  };\n\n  const removeFavoriteMovie = (movie) => {\n    fetch(`http://localhost:3000/api/moovy/${movie.imdbID}`, {\n    // Adding method type\n    method: \"DELETE\",\n    })\n    // Displaying results to console and popup confirmation\n    .then(json => {\n      console.log(json);\n      if(json.status === 200){\n        toast.success('Removed from your Library');\n      }\n    });\n  };\n\n  return  (\n  <div className ='container-fluid movie-app'>\n    <div className=\"App\">    \n   <Toastr/>    \n    </div> \n    <div className = 'row d-flex align-items-center mt-4 mb-4'>\n      <MovieListHeading heading = 'Moovy'/>\n      <SearchBox searchValue={searchValue} setSearchValue={setSearchValue}/>\n    </div>\n    <div className='d-flex flex-wrap'>\n      <MovieList \n      movies = {movies} \n      handleFavoritesClick = {addFavoriteMovie}\n      favoriteComponent = {AddFavorites}/>\n    </div>\n    <div className = 'row d-flex align-items-center mt-4 mb-4'>\n      <MovieListHeading heading = 'My Library'/>\n    </div>\n    <div className='d-flex flex-wrap'>\n      <FavoritesMovieList\n      movies = {favorites}\n      handleFavoritesClick = {removeFavoriteMovie}\n      favoriteComponent = {RemoveFavorites}\n      addReview = {AddReview}\n      />\n    </div>\n  </div>\n  );\n};\n\nexport default App;\n","/home/gabriela/Documentos/moovy-challenge/moovy/src/components/MovieList.js",[],"/home/gabriela/Documentos/moovy-challenge/moovy/src/components/Toastr.js",[],"/home/gabriela/Documentos/moovy-challenge/moovy/src/components/MovieListHeading.js",[],"/home/gabriela/Documentos/moovy-challenge/moovy/src/components/SearchBox.js",[],"/home/gabriela/Documentos/moovy-challenge/moovy/src/components/AddReview.js",[],"/home/gabriela/Documentos/moovy-challenge/moovy/src/components/AddFavorites.js",[],"/home/gabriela/Documentos/moovy-challenge/moovy/src/components/RemoveFavorites.js",[],"/home/gabriela/Documentos/moovy-challenge/moovy/src/components/FavoritesMovieList.js",["44"],{"ruleId":"45","severity":1,"message":"46","line":1,"column":38,"nodeType":"47","messageId":"48","endLine":1,"endColumn":47},{"ruleId":"45","severity":1,"message":"49","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":14},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Howl' is defined but never used."]