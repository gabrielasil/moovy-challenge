{"ast":null,"code":"var _jsxFileName = \"/home/gabriela/Documentos/moovy-challenge/moovy/src/pages/Library.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Toastr from \"../components/Toastr\";\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"../components/MovieList\";\nimport MovieListHeading from \"../components/MovieListHeading\";\nimport SearchBox from \"../components/SearchBox\";\nimport AddFavorites from \"../components/AddFavorites\";\nimport RemoveFavorites from \"../components/RemoveFavorites\";\nimport PlayReview from \"../components/PlayReview\";\nimport FavoritesMovieList from \"../components/FavoritesMovieList\";\nimport { toast } from \"react-toastify\";\nimport AddReview from \"../components/AddReview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [favorites, setFavorites] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [movies, setMovies] = useState([]);\n\n  const getMovieRequest = async searchValue => {\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda`; //template string\n\n    const response = await fetch(url);\n    const responseJson = await response.json(); //converts http response into json\n\n    if (responseJson.Search) {\n      //search only if its a value\n      setMovies(responseJson.Search);\n    }\n  };\n\n  useEffect(() => {\n    const url = `http://localhost:3000/api/moovy`; //template string\n\n    fetch(url).then(async response => {\n      setFavorites(await response.json());\n    }).catch(console.log);\n  }, [favorites]); //just on page load\n\n  const removeFavoriteMovie = movie => {\n    fetch(`http://localhost:3000/api/moovy/${movie.imdbID}`, {\n      // Adding method type\n      method: \"DELETE\"\n    }) // Displaying results to console and popup confirmation\n    .then(json => {\n      console.log(json);\n\n      if (json.status === 200) {\n        toast.success('Removed from your Library');\n      }\n    });\n  };\n\n  useEffect(() => {\n    const url = `http://localhost:3000/api/reviews`; //template string\n\n    fetch(url).then(async response => {\n      setReviews(await response.json());\n    }).catch(console.log);\n  }, [reviews]); //just on page load\n\n  const removeReview = movie => {\n    fetch(`http://localhost:3000/api/reviews/${movie.imdbID}`, {\n      // Adding method type\n      method: \"DELETE\"\n    }) // Displaying results to console and popup confirmation\n    .then(json => {\n      console.log(json);\n\n      if (json.status === 200) {\n        toast.success('Review was removed.');\n      }\n    });\n  };\n\n  if (favorites.length == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid movie-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Toastr, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex align-items-center mt-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(MovieListHeading, {\n          heading: \"My Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"It looks like there are no movies in your library! Search for a movie you have watched and add it here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid movie-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Toastr, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex align-items-center mt-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(MovieListHeading, {\n          heading: \"My Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: /*#__PURE__*/_jsxDEV(FavoritesMovieList, {\n          movies: favorites,\n          handleFavoritesClick: removeFavoriteMovie,\n          favoriteComponent: RemoveFavorites,\n          playReview: PlayReview,\n          addReview: AddReview,\n          reviews: reviews\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(App, \"5BzEtBYE1JG5x6AgGrnOzn8/N5o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gabriela/Documentos/moovy-challenge/moovy/src/pages/Library.js"],"names":["React","useEffect","useState","Toastr","MovieList","MovieListHeading","SearchBox","AddFavorites","RemoveFavorites","PlayReview","FavoritesMovieList","toast","AddReview","App","favorites","setFavorites","reviews","setReviews","movies","setMovies","getMovieRequest","searchValue","url","response","fetch","responseJson","json","Search","then","catch","console","log","removeFavoriteMovie","movie","imdbID","method","status","success","removeReview","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Toastr from \"../components/Toastr\";\nimport '../App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"../components/MovieList\";\nimport MovieListHeading from \"../components/MovieListHeading\";\nimport SearchBox from \"../components/SearchBox\";\nimport AddFavorites from \"../components/AddFavorites\";\nimport RemoveFavorites from \"../components/RemoveFavorites\";\nimport PlayReview from \"../components/PlayReview\"\nimport FavoritesMovieList from \"../components/FavoritesMovieList\";\nimport { toast } from \"react-toastify\";\nimport AddReview from \"../components/AddReview\";\n\nconst App = () => {\n  const [favorites, setFavorites] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [movies, setMovies] = useState([]);\n  \n  const getMovieRequest = async (searchValue) => {\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda` //template string\n    \n    const response = await fetch(url);\n    const responseJson = await response.json(); //converts http response into json\n\n    if(responseJson.Search){ //search only if its a value\n      setMovies(responseJson.Search);\n    }\n    \n  };\n  \n  useEffect(()=> {\n    const url = `http://localhost:3000/api/moovy` //template string\n    \n    fetch(url).then(async (response) => {\n      setFavorites(await response.json());\n    }).catch(console.log)\n\n  }, [favorites]); //just on page load\n\n  const removeFavoriteMovie = (movie) => {\n    fetch(`http://localhost:3000/api/moovy/${movie.imdbID}`, {\n    // Adding method type\n    method: \"DELETE\",\n    })\n    // Displaying results to console and popup confirmation\n    .then(json => {\n      console.log(json);\n      if(json.status === 200){\n        toast.success('Removed from your Library');\n      }\n    });\n  };\n\n  useEffect(()=> {\n    const url = `http://localhost:3000/api/reviews` //template string\n    \n    fetch(url).then(async (response) => {\n      setReviews(await response.json());\n    }).catch(console.log)\n\n  }, [reviews]); //just on page load\n\n  const removeReview = (movie) => {\n    fetch(`http://localhost:3000/api/reviews/${movie.imdbID}`, {\n    // Adding method type\n    method: \"DELETE\",\n    })\n    // Displaying results to console and popup confirmation\n    .then(json => {\n      console.log(json);\n      if(json.status === 200){\n        toast.success('Review was removed.');\n      }\n    });\n  };\n    if (favorites.length == 0){\n        return (\n        <div className ='container-fluid movie-app'>\n            <div className=\"App\">    \n             <Toastr/>    \n              </div> \n              <div className = 'row d-flex align-items-center mt-4 mb-4'>\n                <MovieListHeading heading = 'My Library'/>\n              </div>\n              <div className='d-flex flex-wrap'>\n              <a>It looks like there are no movies in your library!\n            Search for a movie you have watched and add it here!</a>\n              </div>\n        </div>\n        );\n    }\n    else{\n        return  (\n            <div className ='container-fluid movie-app'>\n              <div className=\"App\">    \n             <Toastr/>    \n              </div> \n              <div className = 'row d-flex align-items-center mt-4 mb-4'>\n                <MovieListHeading heading = 'My Library'/>\n              </div>\n              <div className='d-flex flex-wrap'>\n                <FavoritesMovieList\n                movies = {favorites}\n                handleFavoritesClick = {removeFavoriteMovie}\n                favoriteComponent = {RemoveFavorites}\n                playReview = {PlayReview}\n                addReview = {AddReview}\n                reviews = {reviews}\n                />\n              </div>\n            </div>\n        );\n    }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}