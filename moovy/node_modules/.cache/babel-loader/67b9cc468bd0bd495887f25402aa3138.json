{"ast":null,"code":"var _jsxFileName = \"/home/gabriela/Documentos/moovy-challenge/moovy/src/pages/Library.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Toastr from \"../components/Toastr\";\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"../components/MovieList\";\nimport MovieListHeading from \"../components/MovieListHeading\";\nimport SearchBox from \"../components/SearchBox\";\nimport AddFavorites from \"../components/AddFavorites\";\nimport RemoveFavorites from \"../components/RemoveFavorites\";\nimport PlayReview from \"../components/PlayReview\";\nimport FavoritesMovieList from \"../components/FavoritesMovieList\";\nimport { toast } from \"react-toastify\";\nimport AddReview from \"../components/AddReview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const getMovieRequest = async searchValue => {\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda`; //template string\n\n    const response = await fetch(url);\n    const responseJson = await response.json(); //converts http response into json\n  };\n\n  const removeFavoriteMovie = movie => {\n    fetch(`http://localhost:3000/api/moovy/${movie.imdbID}`, {\n      // Adding method type\n      method: \"DELETE\"\n    }) // Displaying results to console and popup confirmation\n    .then(json => {\n      console.log(json);\n\n      if (json.status === 200) {\n        toast.success('Removed from your Library');\n      }\n    });\n  };\n\n  useEffect(() => {\n    const url = `http://localhost:3000/api/reviews`; //template string\n\n    fetch(url).then(async response => {\n      setReviews(await response.json());\n    }).catch(console.log);\n  }, [reviews]); //just on page load\n\n  const removeReview = movie => {\n    fetch(`http://localhost:3000/api/reviews/${movie.imdbID}`, {\n      // Adding method type\n      method: \"DELETE\"\n    }) // Displaying results to console and popup confirmation\n    .then(json => {\n      console.log(json);\n\n      if (json.status === 200) {\n        toast.success('Review was removed.');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid movie-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Toastr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"My Library\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap\",\n      children: /*#__PURE__*/_jsxDEV(FavoritesMovieList, {\n        movies: favorites,\n        handleFavoritesClick: removeFavoriteMovie,\n        favoriteComponent: RemoveFavorites,\n        playReview: PlayReview,\n        addReview: AddReview,\n        reviews: reviews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"sGHcfU1eDUh3mffKWyTFfXPPdHw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gabriela/Documentos/moovy-challenge/moovy/src/pages/Library.js"],"names":["React","useEffect","useState","Toastr","MovieList","MovieListHeading","SearchBox","AddFavorites","RemoveFavorites","PlayReview","FavoritesMovieList","toast","AddReview","App","movies","setMovies","favorites","setFavorites","reviews","setReviews","searchValue","setSearchValue","getMovieRequest","url","response","fetch","responseJson","json","removeFavoriteMovie","movie","imdbID","method","then","console","log","status","success","catch","removeReview"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Toastr from \"../components/Toastr\";\nimport '../App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"../components/MovieList\";\nimport MovieListHeading from \"../components/MovieListHeading\";\nimport SearchBox from \"../components/SearchBox\";\nimport AddFavorites from \"../components/AddFavorites\";\nimport RemoveFavorites from \"../components/RemoveFavorites\";\nimport PlayReview from \"../components/PlayReview\"\nimport FavoritesMovieList from \"../components/FavoritesMovieList\";\nimport { toast } from \"react-toastify\";\nimport AddReview from \"../components/AddReview\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const getMovieRequest = async (searchValue) => {\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda` //template string\n    \n    const response = await fetch(url);\n    const responseJson = await response.json(); //converts http response into json\n    \n};\n\n  const removeFavoriteMovie = (movie) => {\n    fetch(`http://localhost:3000/api/moovy/${movie.imdbID}`, {\n    // Adding method type\n    method: \"DELETE\",\n    })\n    // Displaying results to console and popup confirmation\n    .then(json => {\n      console.log(json);\n      if(json.status === 200){\n        toast.success('Removed from your Library');\n      }\n    });\n  };\n\n  useEffect(()=> {\n    const url = `http://localhost:3000/api/reviews` //template string\n    \n    fetch(url).then(async (response) => {\n      setReviews(await response.json());\n    }).catch(console.log)\n\n  }, [reviews]); //just on page load\n\n  const removeReview = (movie) => {\n    fetch(`http://localhost:3000/api/reviews/${movie.imdbID}`, {\n    // Adding method type\n    method: \"DELETE\",\n    })\n    // Displaying results to console and popup confirmation\n    .then(json => {\n      console.log(json);\n      if(json.status === 200){\n        toast.success('Review was removed.');\n      }\n    });\n  };\n\n  return  (\n  <div className ='container-fluid movie-app'>\n    <div className=\"App\">    \n   <Toastr/>    \n    </div> \n    <div className = 'row d-flex align-items-center mt-4 mb-4'>\n      <MovieListHeading heading = 'My Library'/>\n    </div>\n    <div className='d-flex flex-wrap'>\n      <FavoritesMovieList\n      movies = {favorites}\n      handleFavoritesClick = {removeFavoriteMovie}\n      favoriteComponent = {RemoveFavorites}\n      playReview = {PlayReview}\n      addReview = {AddReview}\n      reviews = {reviews}\n      />\n    </div>\n  </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}