{"ast":null,"code":"var _jsxFileName = \"/home/gmsilva/Documents/Tarken/moovy/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Toastr from \"./components/Toastr\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"./components/MovieList\";\nimport MovieListHeading from \"./components/MovieListHeading\";\nimport SearchBox from \"./components/SearchBox\";\nimport AddFavorites from \"./components/AddFavorites\";\nimport RemoveFavorites from \"./components/RemoveFavorites\";\nimport AddReview from \"./components/AddReview\";\nimport FavoritesMovieList from \"./components/FavoritesMovieList\";\nimport ConfirmationPopup from \"./components/Modal\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const getMovieRequest = async searchValue => {\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda`; //template string\n\n    const response = await fetch(url);\n    const responseJson = await response.json(); //converts http response into json\n\n    if (responseJson.Search) {\n      //search only if its a value\n      setMovies(responseJson.Search);\n    }\n  };\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n  useEffect(() => {\n    const url = `http://localhost:3000/api/moovy`; //template string\n\n    fetch(url).then(async response => {\n      setFavorites(await response.json());\n    }).catch(console.log);\n  }, [favorites]); //just on page load\n\n  const addFavoriteMovie = movie => {\n    fetch(\"http://localhost:3000/api/moovy\", {\n      // Adding method type\n      method: \"POST\",\n      // Adding body or contents to send\n      body: JSON.stringify({\n        movieID: movie.imdbID\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }) // Displaying results to console\n    .then(json => console.log(json));\n\n    if (Response.status == 201) {\n      toast.success('Hey, this is a Success Message');\n      toast.error('Hey, this is an Error Message');\n    } else {}\n  };\n\n  const removeFavoriteMovie = movie => {\n    fetch(`http://localhost:3000/api/moovy/${movie.imdbID}`, {\n      // Adding method type\n      method: \"DELETE\"\n    }) // Displaying results to console\n    .then(json => console.log(json));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid movie-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Toastr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Moovy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap\",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: movies,\n        handleFavoritesClick: addFavoriteMovie,\n        favoriteComponent: AddFavorites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"My Library\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap\",\n      children: /*#__PURE__*/_jsxDEV(FavoritesMovieList, {\n        movies: favorites,\n        handleFavoritesClick: removeFavoriteMovie,\n        favoriteComponent: RemoveFavorites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"074nKq3E0Ruo4Jj46ZhJbSS5bWc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gmsilva/Documents/Tarken/moovy/src/App.js"],"names":["React","useEffect","useState","Toastr","MovieList","MovieListHeading","SearchBox","AddFavorites","RemoveFavorites","AddReview","FavoritesMovieList","ConfirmationPopup","toast","App","movies","setMovies","favorites","setFavorites","searchValue","setSearchValue","getMovieRequest","url","response","fetch","responseJson","json","Search","then","catch","console","log","addFavoriteMovie","movie","method","body","JSON","stringify","movieID","imdbID","headers","Response","status","success","error","removeFavoriteMovie"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Toastr from \"./components/Toastr\";\n\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"./components/MovieList\";\nimport MovieListHeading from \"./components/MovieListHeading\";\nimport SearchBox from \"./components/SearchBox\";\nimport AddFavorites from \"./components/AddFavorites\";\nimport RemoveFavorites from \"./components/RemoveFavorites\";\nimport AddReview from \"./components/AddReview\";\nimport FavoritesMovieList from \"./components/FavoritesMovieList\";\nimport ConfirmationPopup from \"./components/Modal\";\nimport { toast } from \"react-toastify\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const getMovieRequest = async (searchValue) => {\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda` //template string\n    \n    const response = await fetch(url);\n    const responseJson = await response.json(); //converts http response into json\n\n    if(responseJson.Search){ //search only if its a value\n      setMovies(responseJson.Search);\n    }\n    \n  };\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n\n  useEffect(()=> {\n    const url = `http://localhost:3000/api/moovy` //template string\n    \n    fetch(url).then(async (response) => {\n      setFavorites(await response.json());\n    }).catch(console.log)\n\n  }, [favorites]); //just on page load\n\n  const addFavoriteMovie = (movie) => {\n    fetch(\"http://localhost:3000/api/moovy\", {\n    // Adding method type\n    method: \"POST\",\n     \n    // Adding body or contents to send\n    body: JSON.stringify({\n        movieID: movie.imdbID\n    }),\n\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n    })\n  // Displaying results to console\n  .then(json => console.log(json));\n    if(Response.status == 201){\n      toast.success('Hey, this is a Success Message');\n      toast.error('Hey, this is an Error Message');\n    }else{\n      \n    }\n  };\n\n  const removeFavoriteMovie = (movie) => {\n    fetch(`http://localhost:3000/api/moovy/${movie.imdbID}`, {\n    // Adding method type\n    method: \"DELETE\",\n    })\n  // Displaying results to console\n  .then(json => console.log(json));\n  };\n\n  return  (\n  <div className ='container-fluid movie-app'>\n    <div className=\"App\">    \n   <Toastr/>    \n    </div> \n    <div className = 'row d-flex align-items-center mt-4 mb-4'>\n      <MovieListHeading heading = 'Moovy'/>\n      <SearchBox searchValue={searchValue} setSearchValue={setSearchValue}/>\n    </div>\n    <div className='d-flex flex-wrap'>\n      <MovieList \n      movies = {movies} \n      handleFavoritesClick = {addFavoriteMovie}\n      favoriteComponent = {AddFavorites}/>\n    </div>\n    <div className = 'row d-flex align-items-center mt-4 mb-4'>\n      <MovieListHeading heading = 'My Library'/>\n    </div>\n    <div className='d-flex flex-wrap'>\n      <FavoritesMovieList\n      movies = {favorites}\n      handleFavoritesClick = {removeFavoriteMovie}\n      favoriteComponent = {RemoveFavorites}\n      />\n    </div>\n  </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}