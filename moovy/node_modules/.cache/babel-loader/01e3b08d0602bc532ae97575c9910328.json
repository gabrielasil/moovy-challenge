{"ast":null,"code":"var _jsxFileName = \"/home/gmsilva/Documents/Tarken/moovy/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"./components/MovieList\";\nimport MovieListHeading from \"./components/MovieListHeading\";\nimport SearchBox from \"./components/SearchBox\";\nimport AddFavorites from \"./components/AddFavorites\";\nimport RemoveFavorites from \"./components/RemoveFavorites\";\nimport AddReview from \"./components/AddReview\";\nimport FavoritesMovieList from \"./components/FavoritesMovieList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    const [movies, setMovies] = useState([]);\n    const [favorites, setFavorites] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n\n    const getMovieRequest = async searchValue => {\n      const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda`; //template string\n\n      const response = await fetch(url);\n      const responseJson = await response.json(); //converts http response into json\n\n      if (responseJson.Search) {\n        //search only if its a value\n        setMovies(responseJson.Search);\n      }\n    };\n\n    useEffect(() => {\n      getMovieRequest(searchValue);\n    }, [searchValue]);\n    useEffect(() => {\n      const url = `http://localhost:3000/api/moovy`; //template string\n\n      fetch(url).then(async response => {\n        setFavorites(await response.json());\n      }).catch(console.log);\n    }, [favorites]); //just on page load\n\n    const addFavoriteMovie = movie => {\n      fetch(\"http://localhost:3000/api/moovy\", {\n        // Adding method type\n        method: \"POST\",\n        // Adding body or contents to send\n        body: JSON.stringify({\n          movieID: movie.imdbID\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }) // Displaying results to console\n      .then(json => console.log(json));\n    };\n\n    const removeFavoriteMovie = movie => {\n      fetch(`http://localhost:3000/api/moovy/${movie.imdbID}`, {\n        // Adding method type\n        method: \"DELETE\"\n      }) // Displaying results to console\n      .then(json => console.log(json));\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid movie-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex align-items-center mt-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n          heading: \"Moovy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          searchValue: searchValue,\n          setSearchValue: setSearchValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: /*#__PURE__*/_jsxDEV(MovieList, {\n          movies: movies,\n          handleFavoritesClick: addFavoriteMovie,\n          favoriteComponent: AddFavorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex align-items-center mt-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(MovieListHeading, {\n          heading: \"My Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: /*#__PURE__*/_jsxDEV(FavoritesMovieList, {\n          movies: favorites,\n          handleFavoritesClick: removeFavoriteMovie,\n          favoriteComponent: RemoveFavorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gmsilva/Documents/Tarken/moovy/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Route","Switch","MovieList","MovieListHeading","SearchBox","AddFavorites","RemoveFavorites","AddReview","FavoritesMovieList","App","Component","render","movies","setMovies","favorites","setFavorites","searchValue","setSearchValue","getMovieRequest","url","response","fetch","responseJson","json","Search","then","catch","console","log","addFavoriteMovie","movie","method","body","JSON","stringify","movieID","imdbID","headers","removeFavoriteMovie"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"./components/MovieList\";\nimport MovieListHeading from \"./components/MovieListHeading\";\nimport SearchBox from \"./components/SearchBox\";\nimport AddFavorites from \"./components/AddFavorites\";\nimport RemoveFavorites from \"./components/RemoveFavorites\";\nimport AddReview from \"./components/AddReview\";\nimport FavoritesMovieList from \"./components/FavoritesMovieList\";\n\nclass App extends Component {\n  render() {\n    const [movies, setMovies] = useState([]);\n    const [favorites, setFavorites] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n\n    const getMovieRequest = async (searchValue) => {\n      const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda` //template string\n      \n      const response = await fetch(url);\n      const responseJson = await response.json(); //converts http response into json\n\n      if(responseJson.Search){ //search only if its a value\n        setMovies(responseJson.Search);\n      }\n      \n    };\n\n    useEffect(() => {\n      getMovieRequest(searchValue);\n    }, [searchValue]);\n\n    useEffect(()=> {\n      const url = `http://localhost:3000/api/moovy` //template string\n      \n      fetch(url).then(async (response) => {\n        setFavorites(await response.json());\n      }).catch(console.log)\n\n    }, [favorites]); //just on page load\n\n    const addFavoriteMovie = (movie) => {\n      fetch(\"http://localhost:3000/api/moovy\", {\n      // Adding method type\n      method: \"POST\",\n      \n      // Adding body or contents to send\n      body: JSON.stringify({\n          movieID: movie.imdbID\n      }),\n\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n      })\n    // Displaying results to console\n    .then(json => console.log(json));\n    };\n\n    const removeFavoriteMovie = (movie) => {\n      fetch(`http://localhost:3000/api/moovy/${movie.imdbID}`, {\n      // Adding method type\n      method: \"DELETE\",\n      })\n    // Displaying results to console\n    .then(json => console.log(json));\n    };\n\n    return  (\n    <div className ='container-fluid movie-app'>\n      <div className = 'row d-flex align-items-center mt-4 mb-4'>\n        <MovieListHeading heading = 'Moovy'/>\n        <SearchBox searchValue={searchValue} setSearchValue={setSearchValue}/>\n      </div>\n      <div className='d-flex flex-wrap'>\n        <MovieList \n        movies = {movies} \n        handleFavoritesClick = {addFavoriteMovie}\n        favoriteComponent = {AddFavorites}/>\n      </div>\n      <div className = 'row d-flex align-items-center mt-4 mb-4'>\n        <MovieListHeading heading = 'My Library'/>\n      </div>\n      <div className='d-flex flex-wrap'>\n        <FavoritesMovieList\n        movies = {favorites}\n        handleFavoritesClick = {removeFavoriteMovie}\n        favoriteComponent = {RemoveFavorites}\n        />\n      </div>\n    </div>\n    );\n  };\n  }\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}