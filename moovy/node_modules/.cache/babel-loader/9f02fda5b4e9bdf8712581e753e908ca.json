{"ast":null,"code":"var _jsxFileName = \"/home/gabriela/Documentos/moovy-challenge/moovy/src/pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Toastr from \"../components/Toastr\";\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"../components/MovieList\";\nimport MovieListHeading from \"../components/MovieListHeading\";\nimport SearchBox from \"../components/SearchBox\";\nimport AddFavorites from \"../components/AddFavorites\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useStateIfMounted([]);\n  const [favorites, setFavorites] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const getMovieRequest = async searchValue => {\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda`; //template string\n\n    const response = await fetch(url);\n    const responseJson = await response.json(); //converts http response into json\n\n    if (responseJson.Search && movies) {\n      //search only if its a value\n      setMovies(responseJson.Search);\n    }\n  };\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n  useEffect(() => {\n    const url = `http://localhost:3000/api/moovy`; //template string\n\n    fetch(url).then(async response => {\n      setFavorites(await response.json());\n    }).catch(console.log);\n  }, [favorites]); //just on page load\n\n  const addFavoriteMovie = movie => {\n    fetch(\"http://localhost:3000/api/moovy\", {\n      // Adding method type\n      method: \"POST\",\n      // Adding body or contents to send\n      body: JSON.stringify({\n        movieID: movie.imdbID,\n        isReview: 0\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }) // Displaying popups according to the response status\n    .then(json => {\n      if (json.status === 201) {\n        toast.success('Added to your Library');\n      } else {\n        toast.error('The movie is already on your Library');\n      }\n    });\n  };\n\n  if (movies === []) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid movie-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Toastr, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex align-items-center mt-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n          heading: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          searchValue: searchValue,\n          setSearchValue: setSearchValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"We couldn\\xB4t find the movies you were lookin for :( \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  } else if (searchValue === '') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid movie-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Toastr, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex align-items-center mt-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n          heading: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          searchValue: searchValue,\n          setSearchValue: setSearchValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Type a movie name to search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid movie-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Toastr, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex align-items-center mt-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n          heading: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          searchValue: searchValue,\n          setSearchValue: setSearchValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: /*#__PURE__*/_jsxDEV(MovieList, {\n          movies: movies,\n          handleFavoritesClick: addFavoriteMovie,\n          favoriteComponent: AddFavorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(App, \"LaUURmiXgcfJJP15Ld5GSI/VnhM=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gabriela/Documentos/moovy-challenge/moovy/src/pages/Search.js"],"names":["React","useEffect","useState","Toastr","MovieList","MovieListHeading","SearchBox","AddFavorites","toast","App","movies","setMovies","useStateIfMounted","favorites","setFavorites","searchValue","setSearchValue","getMovieRequest","url","response","fetch","responseJson","json","Search","then","catch","console","log","addFavoriteMovie","movie","method","body","JSON","stringify","movieID","imdbID","isReview","headers","status","success","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Toastr from \"../components/Toastr\";\nimport '../App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from \"../components/MovieList\";\nimport MovieListHeading from \"../components/MovieListHeading\";\nimport SearchBox from \"../components/SearchBox\";\nimport AddFavorites from \"../components/AddFavorites\";\nimport { toast } from \"react-toastify\";\n\nconst App = () => {\n  const [movies, setMovies] = useStateIfMounted([]);\n  const [favorites, setFavorites] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const getMovieRequest = async (searchValue) => {\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=201f1cda` //template string\n    const response = await fetch(url);\n    const responseJson = await response.json(); //converts http response into json\n\n    if(responseJson.Search && movies){ //search only if its a value\n      setMovies(responseJson.Search);\n    }\n    \n  };\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n\n  useEffect(()=> {\n    const url = `http://localhost:3000/api/moovy` //template string\n    \n    fetch(url).then(async (response) => {\n      setFavorites(await response.json());\n    }).catch(console.log)\n\n  }, [favorites]); //just on page load\n\n  const addFavoriteMovie = (movie) => {\n    fetch(\"http://localhost:3000/api/moovy\", {\n      // Adding method type\n      method: \"POST\",\n      \n      // Adding body or contents to send\n      body: JSON.stringify({\n          movieID: movie.imdbID,\n          isReview: 0\n      }),\n\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n\n  // Displaying popups according to the response status\n    .then(json => {\n      if(json.status === 201){\n        toast.success('Added to your Library');\n      }else{\n        toast.error('The movie is already on your Library');\n      }\n    });\n  };\n  if(movies === []){\n    return  (\n        <div className ='container-fluid movie-app'>\n        <div className=\"App\">    \n         <Toastr/>    \n          </div> \n          <div className = 'row d-flex align-items-center mt-4 mb-4'>\n            <MovieListHeading heading = 'Search'/>\n            <SearchBox searchValue={searchValue} setSearchValue={setSearchValue}/>\n          </div>\n          <a>We couldn´t find the movies you were lookin for :( </a>\n        </div>\n    );\n  }else if (searchValue === ''){\n    return  (\n      <div className ='container-fluid movie-app'>\n      <div className=\"App\">    \n       <Toastr/>    \n        </div> \n        <div className = 'row d-flex align-items-center mt-4 mb-4'>\n          <MovieListHeading heading = 'Search'/>\n          <SearchBox searchValue={searchValue} setSearchValue={setSearchValue}/>\n        </div>\n        <a>Type a movie name to search </a>\n      </div>\n    );\n  }else{\n    return  (\n        <div className ='container-fluid movie-app'>\n          <div className=\"App\">    \n         <Toastr/>    \n          </div> \n          <div className = 'row d-flex align-items-center mt-4 mb-4'>\n            <MovieListHeading heading = 'Search'/>\n            <SearchBox searchValue={searchValue} setSearchValue={setSearchValue}/>\n          </div>\n          <div className='d-flex flex-wrap'>\n            <MovieList \n            movies = {movies} \n            handleFavoritesClick = {addFavoriteMovie}\n            favoriteComponent = {AddFavorites}/>\n          </div>\n        </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}